// Code generated by go-bindata.
// sources:
// resource/tmpl/.gometalinter.json.tmpl
// resource/tmpl/CHANGELOG.md.tmpl
// resource/tmpl/LICENSE.tmpl
// resource/tmpl/Makefile.tmpl
// resource/tmpl/README.md.tmpl
// resource/tmpl/configuration.yml.tmpl
// resource/tmpl/definition.yml.tmpl
// resource/tmpl/src/integration_local.go.tmpl
// resource/tmpl/src/integration_remote.go.tmpl
// resource/tmpl/src/integration_test_local.go.tmpl
// resource/tmpl/src/integration_test_remote.go.tmpl
// resource/tmpl/vendor/vendor.json.tmpl
// DO NOT EDIT!

package scaffold

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _resourceTmplGometalinterJsonTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\x72\xcd\x4b\x4c\xca\x49\x55\xb2\x52\x88\x56\x4a\x49\x4d\x4c\x49\xce\x4f\x49\x55\xd2\x51\x50\x4a\x2d\x2a\x4a\xce\x48\x4d\xce\x06\xb1\xd3\xf3\xd3\x72\x4b\x20\x8c\x9c\xcc\x3c\x28\x2b\x33\xb7\x20\xbf\xa8\xa4\x58\x29\x56\x07\x64\x4a\x58\x6a\x5e\x4a\x7e\x91\x92\x95\x42\x49\x51\x69\x2a\x58\xc4\xb5\x22\x39\xa7\x34\x05\x62\xb0\x9e\x9e\xbe\x9e\x9e\x7e\x19\x44\x4d\x2c\x57\x2d\x17\x20\x00\x00\xff\xff\x4d\xab\xfc\x58\x7a\x00\x00\x00")

func resourceTmplGometalinterJsonTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplGometalinterJsonTmpl,
		"resource/tmpl/.gometalinter.json.tmpl",
	)
}

func resourceTmplGometalinterJsonTmpl() (*asset, error) {
	bytes, err := resourceTmplGometalinterJsonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/.gometalinter.json.tmpl", size: 122, mode: os.FileMode(420), modTime: time.Unix(1528988786, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourceTmplChangelogMdTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8f\x3f\x4f\xc3\x30\x10\xc5\x77\x7f\x8a\x27\x65\xa1\x43\x9d\xb2\x76\xab\x60\xa9\x80\x85\x7f\x42\xaa\x18\x1c\xfb\x9a\x18\x9c\xbb\xc8\xbe\x06\xa1\xaa\xdf\x1d\xb5\x01\x95\x8e\xf7\xd3\xe9\xbd\xdf\xab\x70\xd3\x39\x6e\x09\xf7\xd2\x1a\xb3\x4a\x09\x2c\xea\x9a\x44\xf0\x27\x5e\xa0\x02\xed\x62\xc1\x90\xe5\x83\xbc\xe2\x2b\xa6\x84\x86\x10\xc4\xef\x7a\x62\xa5\x80\xc8\xd3\xcb\x36\x26\xb2\xc6\x3c\x77\x84\xad\xe4\xde\x29\x62\x41\xe3\x0a\x05\x08\x63\x73\x47\x34\xc0\xfd\x16\x26\x69\xdf\xaf\x3a\xd5\x61\x59\xd7\x9f\x44\x83\xf3\x7f\xd8\x7a\xe9\xeb\x99\x71\x1c\x2e\x8b\x5d\xe8\x28\x4f\x42\x9b\x27\xea\x1d\x6b\xf4\x78\xa5\x5c\xa2\x70\xe4\x73\x5a\xa1\x7e\xa4\x6c\x25\xb7\xf5\xcc\x1a\x53\x55\x78\xe1\x4c\x89\x8e\x1e\xa6\xaa\x2a\xac\x42\xa0\x60\xe6\x78\x33\xa7\x73\xf2\xf9\x07\x1e\xa9\x97\xf1\x0c\xb0\xb0\xd7\x76\x81\x39\xf6\x7b\x7b\xeb\x94\x0e\x87\x8b\x94\x35\x47\x8d\x2e\x61\x9c\x4c\x96\x58\xb3\x4f\xbb\x40\x05\x0f\xa4\x39\xfa\x82\xe3\x92\x35\x8f\xc4\x2a\xf9\x1b\xc1\xa9\xfb\x09\x00\x00\xff\xff\xe2\x7a\x94\x62\x76\x01\x00\x00")

func resourceTmplChangelogMdTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplChangelogMdTmpl,
		"resource/tmpl/CHANGELOG.md.tmpl",
	)
}

func resourceTmplChangelogMdTmpl() (*asset, error) {
	bytes, err := resourceTmplChangelogMdTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/CHANGELOG.md.tmpl", size: 374, mode: os.FileMode(420), modTime: time.Unix(1528988786, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourceTmplLicenseTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x0a\xf1\x77\xf1\xb7\x52\xf0\xcc\x4b\xce\x29\x4d\x49\x55\x48\x54\xc8\xc9\x4c\x4e\xcd\x2b\x4e\xd5\x03\x04\x00\x00\xff\xff\xe9\xb7\xf2\x07\x18\x00\x00\x00")

func resourceTmplLicenseTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplLicenseTmpl,
		"resource/tmpl/LICENSE.tmpl",
	)
}

func resourceTmplLicenseTmpl() (*asset, error) {
	bytes, err := resourceTmplLicenseTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/LICENSE.tmpl", size: 24, mode: os.FileMode(420), modTime: time.Unix(1528988786, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourceTmplMakefileTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x96\x51\x6f\xdb\x36\x10\xc7\x9f\xcd\x4f\x71\x30\x0c\xc8\x1a\x26\x0a\x18\xb6\x17\x01\x1e\xea\x16\x69\x6a\xac\xb3\x83\x38\x2b\x50\xb4\x41\x41\x53\x27\x99\x35\x45\xaa\x24\xad\xc4\x48\xf3\xdd\x07\x52\xb2\x22\xfb\x25\xe9\x1e\x8a\xe5\x41\xa1\x8e\xc7\xe3\x4f\x77\xc7\x3f\xbd\x9c\xdf\x2c\x3e\x5c\xac\xd6\x23\xc8\x66\x30\x99\xda\x2d\x4a\x09\xa5\x86\x06\x8d\x15\x5a\xc1\x77\x60\x77\x3b\x48\xde\x42\xf4\x09\xd2\xdb\x08\xa2\x87\xda\x08\xe5\x60\x32\xf9\xfd\x31\x8a\x49\xbb\x7c\x7e\xfd\xe6\xdd\x8f\x07\xf8\xc3\x07\x58\x2c\x6f\x2e\x2e\xaf\xe7\x37\x8b\xd5\x12\x86\x11\x36\xcc\xa2\x62\x15\xf6\x86\xfa\x2e\x8f\x63\xf2\x7a\xb1\x9c\x5f\x7f\xfc\xb2\x9c\xff\x7d\x01\x00\x33\x78\x78\xa0\x0b\xe5\xb0\x34\xcc\x09\xad\xe8\x1b\x5d\xd5\x4c\x1d\xae\x0c\x16\xe2\xfe\xf1\x31\x99\x4c\x07\xf1\x63\x72\xb9\xfa\x72\xf5\xd7\xe5\x1a\xc2\xdf\x29\xae\x14\xd6\x01\x4d\x29\xa5\xf0\x1d\x4a\x83\x35\x24\x0d\x8c\xd3\x06\x55\xae\x4d\x3a\x0e\x6b\xdf\x2e\xde\x5f\xac\xcf\xd7\x16\x42\xe5\x60\x0d\x87\xc4\x1d\x6a\x84\x02\x92\x80\x3d\xfe\x85\x96\x3a\x2c\xbb\x59\xad\xde\x77\x5b\xc2\x0c\x4a\xe1\xb6\xfb\x0d\xe5\xba\x4a\x77\xcc\xe4\x82\x29\x6d\xd3\x52\xb7\xfb\xc0\x67\x32\x1a\x95\xba\xde\x95\x54\xa8\x94\x49\xe4\x6e\xab\x2b\xe6\x1d\x2a\x74\x4c\x0a\xe5\xd0\xd0\xe6\xb7\xd6\xef\x29\x12\xbb\xbf\x4b\x4b\xcd\x75\xd3\x3e\xcf\xa7\xad\x33\xe8\xf8\xd6\xa4\x0e\xad\x13\xc5\x21\x65\xd6\xa2\x71\xe7\x6e\x73\x89\xbb\xb5\x68\x43\x24\xf7\x95\x84\xcf\x84\x30\x29\x33\xd8\xec\x85\xcc\x09\x09\xff\x32\xe0\x5b\xe4\xbb\xe4\x58\x5e\x2e\x91\x29\x68\x98\x14\x39\x73\x08\x7e\x07\xe0\xba\xaa\x85\x44\x42\xc2\x64\x46\x46\xaf\x90\x6f\x35\x8c\x67\x33\x9f\xb6\x61\x45\xc0\x9b\x3e\x75\x41\x6e\x33\xb8\xc6\x4a\x37\x42\x95\xb0\x11\x8a\x19\x81\x16\x98\xca\x81\xeb\x06\x0d\x2b\x11\x0a\x21\x91\x52\x3a\x26\xa3\x57\xa6\x82\xc4\x14\x8d\x77\xec\xe7\xe9\x7d\x25\x09\x71\x5a\x4b\x7b\x86\xf9\x3c\x42\x58\xe5\x11\x16\xca\x3a\x26\xa5\x87\x68\x6d\x06\xbf\xed\x85\xc1\x1c\x36\x07\x70\x5b\x84\xda\xe8\xaf\xc8\x5d\xc7\x51\x6a\x28\xd1\xc1\x64\xda\x15\x3a\x0e\xb6\xd3\x6a\x25\x89\x68\x83\x76\x70\xc9\xbe\xf6\xc9\xfa\x6f\x8c\xdd\x62\x8f\xfa\x8f\x1f\xfd\x20\x68\xb2\x7f\x31\x6b\x8e\xb5\xcd\xba\xd8\x7e\x9c\x68\x25\x0f\xad\x39\x0c\x5f\x50\x58\xef\x7b\x96\xd4\x9a\xf1\x9d\xaf\x65\x8e\x35\xaa\x1c\x15\xf7\x55\x7e\x0e\xbd\x3b\x1e\xf6\xa0\x38\x21\xc7\x66\xcb\x42\xf8\xe7\x21\xfa\xe6\xbc\xcd\xe0\x43\x3b\xf6\x20\x56\xef\x0d\x47\xe0\x3a\x47\x30\x7b\xa5\xbc\xed\x24\x1b\xc7\xcd\xcf\x13\xc4\xb5\x2a\x44\x39\xa3\x27\x33\x5f\xad\x56\xad\x7e\x3c\x01\x26\xe1\xf4\xfc\xdf\x20\x93\x04\x15\xdb\x48\x9c\x05\x5b\xc1\x38\x9a\x27\x5b\xa9\xad\xa8\x6a\x89\xc7\x4f\xe9\x8e\xf2\x4b\xbf\xa2\x73\xf7\x1f\xf1\xda\xab\x85\xc7\x9d\x4c\x07\xa2\x1d\x3f\x75\x63\x90\x13\x48\xb4\x3f\xc2\xe9\xa9\x13\xd0\xd4\x1a\xde\xef\xde\x76\xdb\xa0\x07\x7f\x36\x87\x57\xb5\x97\xa6\x20\x28\xa0\x97\xb2\xae\x5a\x7b\x25\x5c\x30\xda\x7e\x4b\x2f\xd1\xc1\xcd\x9f\xc4\x70\x23\xc5\xfe\xd2\xe9\x75\xf7\xcf\x33\x45\x3b\x91\x89\x8c\x88\x22\xc7\x02\x2e\x57\xab\x35\x11\x85\xc2\x6f\x30\xf6\x71\x56\xeb\x78\xec\x47\xc7\x0b\x3d\x1e\x93\xd1\x64\x8a\xc6\x68\x13\x7c\x41\x58\x50\xda\xef\xd9\x7b\x50\x78\x63\xb4\xb5\x49\x9b\x2d\x0f\x2b\x2c\xf8\x04\x03\x93\x52\xdf\x61\x0e\x85\x36\x10\x05\x75\x8e\x7e\x85\xa8\x2f\x40\x14\x64\x39\x1a\x96\x27\x02\xc7\x4c\x89\xce\xc6\x04\x55\x2e\x8a\xee\x79\x64\xf5\xbf\x10\x86\xb4\xfe\x7d\xc8\xdb\xbe\x0f\x89\xbd\x05\x1a\x66\x84\xef\xcb\x73\xf8\xe0\xfe\x13\xf0\x09\xbd\x7a\xb7\x5a\x7e\xcc\x7c\xc4\xae\x51\xda\xbb\xaa\x55\xc5\x13\x41\x0e\x5a\xd7\x1f\xe3\x63\x07\xb6\x17\xe2\xb0\x80\xff\x06\x00\x00\xff\xff\xad\xf9\xcf\x4c\x72\x09\x00\x00")

func resourceTmplMakefileTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplMakefileTmpl,
		"resource/tmpl/Makefile.tmpl",
	)
}

func resourceTmplMakefileTmpl() (*asset, error) {
	bytes, err := resourceTmplMakefileTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/Makefile.tmpl", size: 2418, mode: os.FileMode(420), modTime: time.Unix(1530278098, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourceTmplReadmeMdTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x41\x6e\xdb\x30\x10\x45\xf7\x3c\xc5\x07\xbc\x0b\x0c\x1f\xc0\xdb\x3a\x0b\x6f\x52\x20\x46\x0f\x30\x26\x47\xf2\xa0\x14\xc9\x0e\xc9\xd8\x46\x90\xbb\x17\xa2\x95\x86\x36\xd0\xec\x04\x7d\x0d\xe7\xfd\x27\xae\xf0\xc2\x67\xbc\xb2\x17\x8b\x7d\x18\x94\x72\xd1\x6a\x4b\x55\xc6\x3e\x14\x1e\x95\x8a\xc4\x80\x21\x2a\xde\xdf\xb1\xe9\xde\x6d\x5e\x68\x62\x7c\x7c\x18\xf3\x18\xec\x38\x5b\x95\xd4\x06\xe7\x7c\xb5\xc2\x2b\xff\xa9\xa2\x3c\x71\x28\xd9\x98\x5d\xb4\x75\x7e\x84\x0c\x28\xa7\xfb\x4d\x27\xca\xc8\x71\x62\xe4\xc4\x56\xc8\x43\xbf\x46\x37\x78\xbe\x6c\xb1\x0f\xb9\x90\xf7\x12\x46\x50\x30\x7c\x29\x4a\x98\xa2\xab\x9e\xd7\x48\xac\x93\xe4\x2c\x31\x64\x94\x08\xbe\xb0\xad\x85\x41\x38\x4a\x20\xbd\xae\xc1\xc5\x6e\x1a\xd1\x8f\x18\x06\x19\xeb\x6d\xeb\xf7\x48\x81\xd9\x2d\x50\xb6\x9f\x6a\x56\xb4\x86\x20\x61\xbc\xa1\x1d\xb8\x98\x9a\x7a\x8a\x35\xc8\x39\xd0\xbf\x36\x35\xb3\x76\x14\x4b\x97\x4f\x88\x26\xee\xc8\x8d\x40\xba\x08\x49\xa3\xe5\x9c\xdb\xc6\x07\xbc\xdb\x41\xbf\x32\x8d\xdc\xd5\x98\x28\x38\x2a\x51\xaf\xa0\xe0\x10\xdb\xcf\x20\x0f\xd2\xb1\xe5\xb9\x67\x7f\x3c\x71\xdd\x66\x4e\xf1\xdc\x2b\x94\xf2\xe9\x6d\x4a\x54\xe4\x28\x5e\xca\xd5\x98\x27\x1c\x6a\x4a\x51\x0b\x3b\xfc\x3c\x6c\xcd\xd3\xff\xae\x09\xde\x58\x9b\x91\xf9\x9b\x67\x27\x73\xb6\x5d\x1c\x7c\xa9\xde\xf1\x1b\xfb\x98\x5a\x85\xba\x54\xea\xa5\xb8\x2e\x3f\x47\xfd\x3d\xf8\x78\x5e\xa4\x48\xbe\xb7\xf2\x37\x00\x00\xff\xff\x03\xe0\xb9\x54\xda\x02\x00\x00")

func resourceTmplReadmeMdTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplReadmeMdTmpl,
		"resource/tmpl/README.md.tmpl",
	)
}

func resourceTmplReadmeMdTmpl() (*asset, error) {
	bytes, err := resourceTmplReadmeMdTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/README.md.tmpl", size: 730, mode: os.FileMode(420), modTime: time.Unix(1528988786, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourceTmplConfigurationYmlTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x8e\xcf\x4a\xc4\x30\x10\xc6\xef\x79\x8a\x79\x01\x0b\x5e\x43\x11\x62\x8d\x1a\x28\x11\x6a\xf5\x5a\xc6\x3a\x94\x60\x33\x91\x34\x0a\xa5\xf4\xdd\xa5\x7f\xdc\x5d\xd8\xc3\x5e\xf6\xfa\x7d\xbf\xf9\xe6\xe7\x38\x51\x17\x31\xb9\xc0\x0d\xa3\x27\x09\x6d\xf0\xd9\x34\x41\x66\x8e\x4d\x56\x04\xff\x8d\x3c\x5a\xf4\x04\xf3\x7c\x56\xef\xb9\x10\x8e\x87\x84\xdc\xd2\x20\x05\xc0\x0d\x6c\x83\xb9\xb1\xaf\xb5\xb2\x85\x06\xf3\xa0\x6d\x6d\x1e\x8d\xae\xee\x04\x00\x2c\xaf\x3c\xf2\xa7\x04\x4f\x29\xba\x76\x58\x43\x8c\xdd\x8f\x27\x4e\xeb\xc6\x1e\xdc\x4a\xc8\x55\xf5\xd4\xbc\xab\xf2\x4d\x6f\xb7\x3d\x7e\x50\x7f\x60\xbe\x68\x5c\x98\x52\xdd\xeb\xf2\x9f\x3a\x55\x78\xa9\x9f\x75\x05\x97\x45\x1c\xff\x12\xa7\x10\xc7\xeb\xaa\xfc\x05\x00\x00\xff\xff\x13\x20\xb7\xd8\x66\x01\x00\x00")

func resourceTmplConfigurationYmlTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplConfigurationYmlTmpl,
		"resource/tmpl/configuration.yml.tmpl",
	)
}

func resourceTmplConfigurationYmlTmpl() (*asset, error) {
	bytes, err := resourceTmplConfigurationYmlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/configuration.yml.tmpl", size: 358, mode: os.FileMode(420), modTime: time.Unix(1528988786, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourceTmplDefinitionYmlTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x90\x31\x4f\xc4\x30\x0c\x85\xf7\xfe\x0a\xff\x81\xe6\xf6\x8e\xc0\x72\x0b\x20\x21\xb1\xa2\x90\x33\x28\xd2\xc5\x8e\x9c\xa8\xa2\xaa\xfa\xdf\x91\xd3\xb4\x48\x6d\x87\x0e\x6c\xc9\x7b\x9f\x5f\x5e\x4c\x36\x60\x07\x8e\x83\x19\x47\x30\x57\xca\xf8\x2d\x36\x7b\x26\xf3\xc8\x21\x5a\x1a\x9e\x6d\x40\x98\xa6\x9d\x5d\xf5\xe6\x86\xc9\x89\x8f\xaa\x75\xb0\x85\x9e\xfe\x4c\x65\xa3\x70\x66\xc7\xf7\x8f\x1e\x25\x1d\x0e\xbc\x56\xe2\x7d\x06\x74\x88\xd3\x1e\x7b\x79\x53\xa7\x71\x1c\x82\xa5\x5b\xea\x1a\x80\x80\x59\xbc\x2b\x47\x80\x6a\xcc\x17\x80\x16\xcc\xe5\xd3\xd3\x65\x1b\xf3\xe0\xc9\xca\xf2\xc3\x95\x6d\xdb\x9a\x55\x14\x4f\x19\xa5\xb7\xf7\x7d\x89\x6b\x75\x4a\x15\x05\x7b\xa4\xcc\x32\xfc\x4b\x85\x35\xad\x68\x51\xf0\xcb\xff\x1c\xad\x4b\xf5\x65\xf2\x5c\x55\x00\xd4\xe8\xa3\x4d\x9d\x2f\xa9\x15\xe7\x98\xf3\x2f\xff\x06\x00\x00\xff\xff\x27\xb6\xf9\xcc\x6b\x02\x00\x00")

func resourceTmplDefinitionYmlTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplDefinitionYmlTmpl,
		"resource/tmpl/definition.yml.tmpl",
	)
}

func resourceTmplDefinitionYmlTmpl() (*asset, error) {
	bytes, err := resourceTmplDefinitionYmlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/definition.yml.tmpl", size: 619, mode: os.FileMode(420), modTime: time.Unix(1528988786, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourceTmplSrcIntegration_localGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x93\xdf\x6b\xdb\x30\x10\xc7\x9f\xad\xbf\xe2\xa6\x87\x21\x43\x2a\xbb\x6c\x4f\x83\x3c\x98\x2e\x94\x42\xd7\x0d\xc2\xf6\xae\xda\x17\x57\xc4\x92\x8c\x74\x4e\x08\x69\xfe\xf7\x21\x79\x24\x4e\xb3\x30\xba\xb7\xe4\xbe\xf7\xe3\xf3\x3d\x9f\x7a\x55\xaf\x55\x8b\x60\x94\xb6\x8c\x69\xd3\x3b\x4f\x20\x58\x16\x9a\x75\xe5\xdb\x00\xbc\xd5\xf4\x32\x3c\xcb\xda\x99\xc2\xe2\xd6\x63\xa7\xeb\x42\xdb\x95\x57\x37\xda\x12\xb6\x5e\x91\x76\x36\xdc\x84\x66\x5d\x28\xdf\x06\xce\xb2\xf7\x94\x34\x8a\x54\x81\x1b\xb4\xf4\x3f\x85\x06\xc9\xeb\xfa\x9d\x95\x93\x00\x67\x39\x63\xb4\xeb\x11\x94\x6f\x07\x83\x96\x1e\x75\x20\x08\xe4\x87\x9a\x60\x7f\xdc\x82\xfc\x8a\x2b\x35\x74\x54\x4d\xb2\xd8\x81\xb1\xda\xd9\x90\xb6\x35\xe9\xf9\xa4\x0c\x02\x00\xcc\x81\xd7\xce\xc8\xfd\x5e\x3e\x9c\x44\x79\xe7\x4c\xaf\xec\x2e\x26\x1d\x0e\x6f\xc5\x31\xca\xcf\xda\xfd\x42\x1f\xb4\xb3\xb1\x5d\x29\x6f\x65\x99\x90\x37\xca\xc7\xa9\x71\xdf\x67\xe4\x51\x5b\x0d\xb6\x4e\x5f\x53\xe4\xd1\x41\x51\xc0\x9d\x47\x45\x08\x93\x49\x2c\xd3\x33\x40\xef\xe1\xcb\x1c\xf4\x14\x00\xb7\xe2\x8d\x95\x19\x5c\xc2\x9c\xc5\x64\x5c\x90\xf8\x18\x59\xf2\x9c\x65\xbd\xb2\xba\xfe\x6e\x17\xde\x0b\xf4\x3e\x67\x2c\x43\x4b\x9a\x76\x69\x94\x7c\x74\xb5\xea\x16\x29\x20\xa2\x56\x14\x50\x35\x0d\x2c\xe2\x01\xb0\x4c\xaf\xa2\x9b\x20\xab\xae\x13\x39\xbc\xbe\x8e\xff\x92\x18\xa2\x97\x2c\x22\xcf\x61\x6c\x28\xab\xa6\x49\x92\x48\xe7\x93\xd8\xb9\xc7\x40\xca\x13\x9f\x01\x0f\xa4\x68\x08\x3c\x32\x5d\x40\x65\x87\xd3\xec\x07\x1b\xcb\x9d\xdf\x81\x26\x34\xd7\x20\x4e\x59\x17\x1c\x4b\xa4\xa3\xfa\x40\x68\x04\xd7\x36\x90\xb2\x35\x46\x8c\xcd\xb8\xb2\xf8\xf3\x93\x2c\xe5\x2d\xff\x17\xcf\xb7\x74\xd3\xd7\x38\x46\x75\xdc\x86\x39\x7e\xc3\x3f\x24\x4f\xb8\x1d\xf5\x25\x92\xe0\x77\x43\x20\x67\x96\xca\xf4\x1d\xfe\x75\xea\xd1\x88\x89\x1e\xc6\x4a\xc1\x83\x33\x78\x13\x5f\x17\x9f\xc1\xe7\xb2\x2c\x67\x30\xbe\x32\x79\x5f\xfd\xbc\x5f\x5c\xa5\x9f\x04\xb5\xfc\x31\x3c\x77\x3a\xbc\x88\x3c\x8f\xaf\x24\x5d\xe4\x79\x51\x04\x77\x3e\x1d\xa8\x5e\x25\x17\x1f\xe6\x60\x75\x97\x7c\xa5\xd4\x63\xeb\x03\xfb\x1d\x00\x00\xff\xff\xd2\x6d\xea\xd3\xa3\x04\x00\x00")

func resourceTmplSrcIntegration_localGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplSrcIntegration_localGoTmpl,
		"resource/tmpl/src/integration_local.go.tmpl",
	)
}

func resourceTmplSrcIntegration_localGoTmpl() (*asset, error) {
	bytes, err := resourceTmplSrcIntegration_localGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/src/integration_local.go.tmpl", size: 1187, mode: os.FileMode(420), modTime: time.Unix(1530271809, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourceTmplSrcIntegration_remoteGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x94\xcf\x6e\xdb\x30\x0c\xc6\xcf\xd6\x53\x70\x3a\x0c\x36\x90\x28\xb1\xb7\xd3\x80\x1c\x8c\x2e\x28\x0a\xec\x1f\x50\x6c\x77\xd5\x66\x5c\xa1\x96\xe4\x49\x74\x8b\xa0\xcd\xbb\x0f\x92\x8b\xd8\x69\x97\xb6\xe9\x29\x31\x29\x8a\xdf\xf7\x13\xa5\x4e\x56\x37\xb2\x41\xd0\x52\x19\xc6\x94\xee\xac\x23\x48\x59\xe2\xeb\x9b\xd2\x35\x1e\x78\xa3\xe8\xba\xbf\x12\x95\xd5\x0b\x83\x77\x0e\x5b\x55\x2d\x94\xd9\x38\x39\x57\x86\xb0\x71\x92\x94\x35\x7e\xee\xeb\x9b\x85\x74\x8d\xe7\x2c\x39\xa5\xa4\x96\x24\x17\x78\x8b\x86\xde\x53\xa8\x91\x9c\xaa\x4e\xac\x9c\x04\x38\xcb\x18\xa3\x6d\x87\x20\x5d\xd3\x6b\x34\xf4\x4d\x79\x02\x4f\xae\xaf\x08\xee\xf7\x14\xc4\x57\xdc\xc8\xbe\xa5\x72\xb2\x8a\xed\x18\xab\xac\xf1\x91\xd6\x64\xcf\x1f\x52\x23\x00\xc0\x0a\x78\x65\xb5\xb8\xbf\x17\x17\x63\x52\x9c\x59\xdd\x49\xb3\x0d\x8b\x76\xbb\xa7\xc9\x21\xca\x0f\xb6\xfb\x83\xce\x2b\x6b\xc2\x76\x4b\x91\x8b\x65\x94\x7c\x2b\x5d\xe8\x1a\x78\x1f\x28\x0f\xb9\x4d\x6f\xaa\x78\x9a\x69\x16\x1c\x2c\x16\x70\xe6\x50\x12\xc2\xa4\x13\x4b\xd4\x0c\xd0\x39\xf8\xb2\x02\x35\x15\x80\x77\xe9\x13\x2b\x33\x78\x2e\xe6\x20\x26\x02\xa0\xf4\x63\xd0\x92\x65\x2c\xe9\xa4\x51\xd5\x4f\xb3\x76\x2e\x45\xe7\x32\x36\x55\xb0\x36\xa4\x68\x3b\x03\x0c\xbf\x0a\x3d\x98\xc0\x4a\xf7\x9e\xe0\x0a\xa1\x37\xea\x6f\x8f\x2c\xc1\x7c\xd4\x26\x86\x92\x94\x2b\xe3\x49\x9a\x0a\xe7\x39\x9f\x01\xaf\x7a\x4f\x56\xf3\x63\xed\xca\xba\x86\x75\x98\x29\x96\xa8\x4d\x00\xe4\x45\xd9\xb6\x69\x06\x0f\x0f\xc3\x57\x4c\xfa\x80\x27\x09\x9d\x56\x80\xb9\x28\xeb\x3a\x86\xd3\x38\x8d\x11\x05\x77\xe8\x49\x3a\x0a\x2d\x3d\x49\xea\x3d\x0f\x16\x9f\x35\x4d\x76\x63\xdf\x0b\x13\xca\xad\xdb\x82\x22\xd4\xc7\x04\x8c\xab\x0e\x34\x5c\x22\xed\x33\x17\x84\x7a\xf4\x1d\x24\xdc\x0e\xf4\xc3\xdf\x4f\x62\x29\x72\xfe\x9a\x96\xef\xf1\x7a\x1c\xd3\x30\x64\x07\x0a\x7a\x64\x8e\x79\xf0\x3e\x24\x2f\x91\x52\x7e\x16\x61\x5f\x4a\xdd\xb5\xf8\xff\x96\x8f\x06\x74\x34\x30\x54\xa6\xdc\x5b\x8d\xf3\x70\x4b\xf9\x0c\xf2\xe5\x72\x39\x83\xe1\xb6\x8a\xf3\xf2\xf7\xf9\xfa\x25\xe9\x8f\xd3\x22\x8d\xa5\x6b\x74\x8f\x53\xc3\x12\x2c\x5e\x9a\x8b\xe2\xb5\xb9\x38\xe1\x20\x8a\xd3\x0e\xe2\xf3\xf1\x83\x78\x03\xf9\xd1\x15\x16\xef\x26\x5f\x1c\x23\x5f\xbc\x9d\xfc\x24\xa8\xc4\xaf\xfe\xaa\x55\xfe\x3a\xcd\xb2\xf0\xce\xc5\x37\xe5\xb0\x28\x88\xb6\x2e\x3e\x31\x6a\x13\x1d\x7c\x58\x81\x51\x6d\x34\x15\x97\xee\xb7\xde\xb1\x7f\x01\x00\x00\xff\xff\x85\x08\x50\xc7\x65\x06\x00\x00")

func resourceTmplSrcIntegration_remoteGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplSrcIntegration_remoteGoTmpl,
		"resource/tmpl/src/integration_remote.go.tmpl",
	)
}

func resourceTmplSrcIntegration_remoteGoTmpl() (*asset, error) {
	bytes, err := resourceTmplSrcIntegration_remoteGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/src/integration_remote.go.tmpl", size: 1637, mode: os.FileMode(420), modTime: time.Unix(1530271809, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourceTmplSrcIntegration_test_localGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x54\x4d\x6f\xdb\x30\x0c\x3d\x5b\xbf\x42\xe0\xc9\x1e\x5c\xb9\x29\x86\x1d\x02\xec\xd0\x15\x41\x11\x60\xed\x61\x4d\xb1\x43\x10\xac\xaa\xc3\x38\x6a\x6d\x29\x95\xe8\xb6\x41\x90\xff\x3e\x48\x76\x12\xa7\xc9\x0a\x6c\xd8\x2e\x3b\xe5\x43\x7c\x8f\x8f\x7c\x24\x17\x32\x7f\x94\x05\xf2\x4a\x2a\xcd\x98\xaa\x16\xc6\x12\x8f\x59\x04\xa8\x73\x33\x55\xba\xc8\x1e\x9c\xd1\xc0\x22\x20\x74\xa4\x74\x01\x8c\x45\x50\x28\x9a\xd7\xf7\x22\x37\x55\xa6\xf1\xc5\x62\xa9\xf2\x4c\xe9\x99\x95\x27\x4a\x13\x16\x56\x92\x32\xda\x9d\xb8\xe9\x63\x36\x95\x24\x33\x7c\x46\x4d\xf0\x07\xc0\x0a\xc9\xaa\xfc\x37\x91\x9d\x3f\xde\x20\x1d\x59\xa4\x7c\x6e\xb3\x50\xcc\x6c\x99\x49\xe7\xd0\x12\xb0\x84\xb1\x59\xad\x73\x3e\x42\x47\x03\x2f\x36\x26\xfe\xa1\xad\x58\x8c\x12\xbe\x62\x51\x96\xf1\xa1\xf6\xd1\x7c\x8e\x16\x39\xcd\x91\x97\xa6\x50\x39\x9f\x19\xcb\x97\xa6\xb6\xdc\xc7\x3b\xc6\x22\x95\x72\xb4\x96\xf7\x3f\xf3\x8e\x12\x71\x8d\x2f\x71\x68\x22\xa4\x1c\x7a\xe2\x54\x9c\x42\xc2\xa2\x46\x80\xb8\x36\x03\x6b\x8d\x8d\x29\x40\x13\xc6\x22\xdc\x91\x88\x81\x26\x45\xcb\x06\xdd\x7c\xf7\x1c\xfe\xd7\xb5\xac\xd0\x2d\x64\x8e\xef\x73\x89\xf3\xe9\xb4\x29\x2b\x38\xb1\xd3\x72\x53\x57\x95\xb4\x5b\xba\x0b\x49\x58\x18\xbb\x84\xc4\xc3\x5a\xbe\xc1\x53\x2d\xcb\xc0\x26\x02\x87\x1b\x9f\x4e\x44\x0b\x6c\x71\x1b\x9a\xe4\x7d\xd0\x86\xfe\x20\xdb\x21\xac\x97\xf2\x12\x75\xbc\x41\x7b\x3d\xeb\x8e\x47\x57\x61\x2e\xdc\x7f\xe5\x52\xb5\xe5\x42\x2f\xa3\x29\xf1\x06\xa9\x61\x6c\x2b\x7e\x9f\x41\xdc\x60\x1b\xd8\x05\xf5\x20\xf4\xb3\xd9\x25\x71\x79\x7e\x7b\x39\x48\x7e\x19\x7c\xe6\x45\xcf\x8c\x81\x2d\xe0\x7c\x34\xfa\x36\xfc\x72\x3b\x1a\x84\x14\x8d\x0c\xaf\xb2\x12\xad\xa6\x43\xf7\x66\xa5\x91\xf4\xe9\x63\xdc\x4b\x36\x2c\x6e\xbc\x27\x68\x72\xc4\xf2\xbd\xac\x7b\xf1\x67\x3e\x7e\xcf\xff\x0b\x8b\x92\xf0\xab\xc9\x65\xd9\xb6\xfd\x60\x12\xfe\x8a\xbf\x4a\x74\x73\x24\x2c\x7a\xd8\xb2\xfa\xbb\x28\xae\xa4\x75\x73\x59\xc6\xea\xd8\xbe\xdc\xad\x40\xcb\x0a\xa1\xdf\x26\x84\x85\x35\x64\x72\x53\xfe\x78\x46\xeb\xfc\x75\xea\xc3\x19\xa4\xd0\xd1\xd7\x79\x69\xc4\xa5\xe0\xef\x20\xf4\xc7\x2b\x68\x1b\x03\xfd\xf1\xc4\x63\xfc\x5e\xf8\xe5\xe9\xaf\xd6\x29\x84\xb5\x0e\x4f\xeb\xc9\xfa\x2e\xe5\x8e\xac\xd2\x45\xfc\xf0\x76\x6f\x0e\xfa\xf6\x5d\xd1\x7c\xb8\xe1\xfa\x47\x4d\xc4\x66\x3f\xf6\x3b\xe9\xaf\xd2\x36\xb1\x1f\xc5\x21\x61\x15\xb7\x33\x00\xf7\xd2\xfa\x8f\xa7\xba\x7e\x85\xe0\x83\x17\xf2\xaa\x1c\xb9\x66\x3f\x76\xc8\x1d\xec\xd8\xf1\x09\x90\x94\x93\xad\xf1\xd8\xc4\x05\xfe\x94\x2b\x35\x0e\x19\x27\xc7\x5c\x6c\xce\xd0\x7e\x42\x17\x27\x49\xca\x7b\xa1\xb9\x3f\x03\x00\x00\xff\xff\x6d\xa9\x6b\x76\x42\x07\x00\x00")

func resourceTmplSrcIntegration_test_localGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplSrcIntegration_test_localGoTmpl,
		"resource/tmpl/src/integration_test_local.go.tmpl",
	)
}

func resourceTmplSrcIntegration_test_localGoTmpl() (*asset, error) {
	bytes, err := resourceTmplSrcIntegration_test_localGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/src/integration_test_local.go.tmpl", size: 1858, mode: os.FileMode(420), modTime: time.Unix(1530271809, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourceTmplSrcIntegration_test_remoteGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x54\xb1\x6e\xdb\x30\x10\x9d\xc5\xaf\x20\x6e\x92\x0a\x85\x8a\x83\xa2\x83\x80\x0e\x69\x60\x04\x19\x92\x21\x71\x26\xc3\x68\x58\xf9\x2c\x33\x91\x48\x97\x3c\x27\x30\x0c\xff\x7b\x41\x4a\xb2\xa5\x3a\x31\xd0\x2e\x05\xba\xd9\xd4\xbd\xc7\xf7\xee\xf1\x6e\x25\x8b\x17\x59\x22\xaf\xa5\xd2\x8c\xa9\x7a\x65\x2c\xf1\x98\x45\x80\xba\x30\x73\xa5\xcb\xec\xd9\x19\x0d\x2c\x02\x42\x47\x4a\x97\xc0\x58\x04\xa5\xa2\xe5\xfa\x87\x28\x4c\x9d\x69\x7c\xb3\x58\xa9\x22\x53\x7a\x61\xe5\x99\xd2\x84\xa5\x95\xa4\x8c\x76\x67\x6e\xfe\x92\xcd\x25\xc9\x0c\x5f\x51\x13\xfc\x05\xb0\x46\xb2\xaa\xf8\x43\x64\xef\xe0\x37\xa4\x23\x8b\x54\x2c\x6d\x16\xcc\x2c\x36\x99\x74\x0e\x2d\x01\x4b\x18\x5b\xac\x75\xc1\x27\xe8\x68\xec\xc5\xc6\xc4\x3f\xb5\x8e\xc5\x24\xe1\x5b\x16\x65\x19\xbf\xd1\xbe\x9a\x2f\xd1\x22\xa7\x25\xf2\xca\x94\xaa\xe0\x0b\x63\xf9\xc6\xac\x2d\xf7\xf5\x8e\xb1\x48\xa5\x1c\xad\xe5\xf9\x57\xde\x53\x22\xee\xf0\x2d\x0e\x4d\x84\x94\xc3\x48\x9c\x8b\x73\x48\x58\xd4\x08\x10\x77\x66\x6c\xad\xb1\x31\x05\x68\xc2\x58\x84\x07\x12\x31\xd6\xa4\x68\xd3\xa0\x9b\xdf\x9e\xc3\xff\xbb\x93\x35\xba\x95\x2c\xf0\x34\x97\xb8\x9c\xcf\x1b\x5b\x21\x89\x83\x96\x87\x75\x5d\x4b\xbb\xa7\xbb\x92\x84\xa5\xb1\x1b\x48\x3c\xac\xe5\x1b\xff\x5c\xcb\x2a\xb0\x89\xc0\xe1\xa6\xe7\x33\xd1\x02\x5b\x5c\x47\x93\x9c\x06\x75\xf4\x47\xb7\x1d\xc3\x46\x29\xaf\x50\xc7\x1d\xda\xeb\xd9\xf5\x32\xba\x0d\xef\xc2\xfd\x57\x29\xd5\x7b\x2e\xf4\x32\x1a\x8b\x0f\x48\x0d\x63\xeb\xf8\x34\x83\x78\xc0\xb6\xb0\x0f\x1a\x41\xe8\x67\x33\x4b\xe2\xfa\xf2\xf1\x7a\x9c\x7c\x58\x7c\xe1\x45\x2f\x8c\x81\x3d\xe0\x72\x32\xb9\xbf\xf9\xf6\x38\x19\x87\x2b\x1a\x19\x5e\x65\x2d\x5a\x4d\xc7\xe9\x2d\x2a\x23\xe9\xcb\xe7\x78\x94\x74\x2c\x6e\x3a\x10\x34\x7b\x27\xf2\xc1\xad\x83\xfa\x0b\x5f\x3f\xc8\xff\xca\xa2\x24\xbc\xc7\xda\x10\xb6\x7d\x3f\x7a\x0a\xff\x38\xe0\x83\xaf\x41\x3d\xfa\xae\x49\xbf\xdc\x84\x47\x7d\x54\x7f\x60\x3c\x82\x84\x63\xaf\xed\x79\xaf\xcd\xef\x68\x71\x2b\xad\x5b\xca\x2a\x56\xef\xcd\xee\xd3\x16\xb4\xac\x11\xf2\xd6\x3b\xac\xac\x21\x53\x98\xea\xfb\x2b\x5a\xe7\x37\x65\x0e\x17\x90\x42\xaf\x55\xbd\x2f\x4d\x9f\x52\xf0\x1a\x20\x9f\x6e\x01\x1b\x3b\xf9\x80\xb5\xf3\x08\xb4\x59\x75\x67\x07\x1f\xbb\x14\xda\x68\x21\x9f\xce\xfc\x4d\x7e\xb2\xfd\xf8\xe7\xdb\x5d\x0a\x61\x31\x85\x4f\xbb\xd9\xee\x29\xe5\x8e\xac\xd2\x65\xfc\xdc\x4c\xfe\xaf\x00\x00\x00\xff\xff\x3e\xc2\x2e\xa2\xa7\x06\x00\x00")

func resourceTmplSrcIntegration_test_remoteGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplSrcIntegration_test_remoteGoTmpl,
		"resource/tmpl/src/integration_test_remote.go.tmpl",
	)
}

func resourceTmplSrcIntegration_test_remoteGoTmpl() (*asset, error) {
	bytes, err := resourceTmplSrcIntegration_test_remoteGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/src/integration_test_remote.go.tmpl", size: 1703, mode: os.FileMode(420), modTime: time.Unix(1530271809, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourceTmplVendorVendorJsonTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x96\x49\x6f\xe2\x48\x14\xc7\xcf\x9d\x4f\xd1\xe2\x9a\xf6\xb8\x76\x57\x59\x9a\x43\x16\x08\x10\x48\x43\x70\x12\xc2\x68\x0e\xb5\x82\x71\xbc\xc4\x36\x4b\x68\xf5\x77\x1f\xd1\x6a\x45\x33\x2d\x0d\x63\xa1\x1c\x86\x3a\x80\xfd\xa4\xbf\xa5\xdf\xcf\xe5\x57\xef\xdb\xd9\xa7\x96\xce\xd3\xd4\x66\x75\x2b\xfc\xdc\x6a\x7d\x39\xfb\xd4\x8a\xe7\x59\x5e\xda\xfd\x6d\x6d\xab\xfa\x47\xa9\x90\x3a\x91\xf3\x7d\xed\x8f\xb3\xcf\x3f\xd7\xb7\xf7\xab\xfd\x6a\xe9\x85\xd5\x49\xb5\x4a\x27\xdd\x0b\xb8\xcf\x5e\x4d\x46\x6a\xa3\xde\x76\xaf\x17\xac\x72\x5f\xef\x63\x9d\x91\x6e\xa7\xee\x2d\x3a\xbe\xfe\xbd\xf5\xe5\x9f\xd9\x42\xd6\x8b\x7d\x66\x1e\xd7\x8b\x95\xfa\x4d\xe7\xa9\x6f\xe4\xda\xea\xf9\xc2\x9f\xe7\x5e\x55\xd8\x8d\xbf\xff\xf9\x35\x56\xda\x75\x5c\xc5\x79\xb6\x8f\x72\x21\xa0\xd2\x48\x48\x09\x99\xa6\x84\x6b\x4a\x81\x0e\x9c\x0b\x38\x62\xc0\xa2\x40\x09\xa9\x02\x1d\xe0\x7f\x7b\x46\x14\xa7\x3f\x90\x11\x80\xdc\x03\xc8\x43\x30\x42\x28\x24\x2c\x44\x60\xd6\x7a\x8f\x7c\xff\xd2\x14\x7f\x65\x28\xab\x23\x91\xe7\x84\x0c\xef\x5e\xd8\x34\x1d\xaf\xda\xae\xb3\xbe\x7a\x7a\xe0\x4d\xf0\x33\xbb\x29\xed\x4b\xac\xfd\x38\x73\xa5\xf4\xe2\xac\xb6\xf3\x52\xd6\x71\x9e\x55\x5e\x65\x12\x5f\x96\xf3\xea\x90\x0e\xc9\x09\x11\xc0\xea\x00\x08\x2a\x9d\xd4\x82\x70\x65\x90\xa3\xc8\x22\xc7\xb1\x74\x5c\x39\xc5\xa9\x71\xcd\x74\x50\x0f\x89\x08\x92\x90\xb2\x90\x1e\xa7\xe3\x56\xce\x06\x13\xe3\xf7\x1f\x66\x3b\x3f\x7d\x75\x4f\x78\xd9\x31\x70\x89\xc6\xe6\xe9\xe2\x23\x74\x18\x59\x4b\xdf\xae\xf7\xbb\xf8\x84\xa4\xb4\xbf\xe6\xdb\xe9\xcd\x6b\xe7\x7a\x94\x5c\xad\x97\xc1\xc6\x6a\x34\xa1\xc9\xd5\xf4\x19\xf5\x3e\x4c\x4a\x9c\xed\xad\xe4\xe5\xdb\x29\x89\x19\x83\x24\x2d\x36\xbd\x40\xac\x47\xc3\xfe\x7d\x6d\xc6\xed\xde\x70\xb6\x30\xd9\xb9\x04\x1f\x26\x26\xb5\x75\x19\xeb\x53\xb2\x02\x44\xc7\xf9\x32\x1e\xd2\x6e\xdf\xdd\xe6\x4f\x9c\xb8\xd9\x08\x45\xd7\xb1\x5a\x37\xea\xa8\xff\x65\xe5\x6f\x85\x53\xb2\x72\x7d\xc3\x7a\x74\xd8\xa3\x64\x68\xbb\xa0\xdd\x65\xdb\xc7\x44\xf4\xdf\xa6\xe7\xb7\xcb\xe4\x23\xac\xbc\xe4\xf3\x53\xb2\x01\x6f\x36\x77\xf5\xd4\xa6\xd3\xe5\x60\x9d\x88\x8a\x26\x39\x2a\x16\xdb\xe7\x99\x7c\x1c\x7f\x84\x8d\xc2\x96\x55\x5c\x9d\x54\x93\x7d\x59\x1a\xdc\x59\x3c\xdf\xf7\x05\xd4\x83\xd9\x0e\x6f\xaa\xae\xb8\x1c\x8f\x51\x5f\x35\x3a\x79\x8a\x64\xee\xdb\xb2\xcc\xcb\x83\xc7\x2d\x87\x4c\x0b\xc0\x29\x65\x48\x9b\xc0\x5a\x80\x6d\xe0\x38\xe4\x5c\x42\xed\x8c\x20\x88\x53\xae\x8d\x35\xcd\xa0\xb1\x07\x61\x84\x60\x48\x68\x08\xe9\x51\xd0\x83\x55\x67\x4d\xfc\xe5\x4b\x99\x76\xee\xb2\x6b\xe5\xd3\xc9\xd5\xa4\x3d\xba\x18\x8a\xf5\x43\x23\xe8\xd4\xee\x64\x69\xf6\xc3\x97\x89\x9d\x7b\x89\x95\xff\xf3\xff\x90\x84\x40\xa0\x80\x33\x1d\x10\x00\x24\xc4\x0c\x71\xa4\x21\x63\x84\x31\x2a\x2d\x90\xdc\x28\x81\xa0\x66\x1a\x35\x90\xc0\x3c\x00\x3d\x08\x22\x08\x42\x4a\x43\x4a\x8e\x92\xb0\xc6\x83\xbe\x69\x5f\xdd\x6c\x1e\xf4\x40\x89\xf3\xbb\xc4\xbf\x5c\x9d\x6f\x37\x6c\xf0\xd6\x68\x04\xab\xea\xd2\xd6\x7a\x51\xfa\xb9\x5a\x6e\x0f\x71\x0b\x0b\x8d\xd3\x10\x41\xa5\xa5\x60\x06\x0b\x64\x24\x35\x00\x50\x01\x05\xc5\xca\x28\x4a\xa4\xc2\x80\x35\x7b\xf9\xcc\x43\x2c\x82\xe2\x07\x37\x3f\x8a\x3b\x5b\x42\x84\xcd\xcd\xf6\x76\xd4\xeb\xc0\xe0\x92\xbd\xe1\xc7\xf6\x2d\x2a\xe2\xc5\x7d\xa3\x8e\xf8\xce\xbd\x9f\xfe\x63\x77\x70\x70\x70\x98\x2a\x2e\x15\x50\x54\x22\x6d\x1d\x66\x2c\xc0\x1c\x73\xc3\x18\xb2\x88\x08\x63\x84\x16\x84\xf1\x86\xe8\xd4\x03\x2c\x82\x3c\x04\x34\x24\xe2\x28\xf4\xf4\x46\x45\xcf\x33\x6e\xba\x8f\x51\x3c\x8a\xa2\xfe\x0a\x27\x75\x71\xce\x49\x31\x6a\x34\x51\xfd\x8a\xee\xcb\xaa\xb2\xe5\xc1\x76\x87\xa4\x44\x1a\x06\x4c\x09\x23\x15\x01\x4c\x32\x11\x00\xc7\x24\xa5\x8e\x42\x6c\xb9\xe4\x9a\x2b\xc8\x9b\xb4\xbb\xc0\x03\xdc\x83\x24\x42\x20\x04\x24\xc4\xc7\x7d\xf9\x6e\x8e\xa3\xdd\x44\xf8\xe3\x5b\xbc\x99\xa9\x9d\x8d\xf1\x8c\x7d\xe5\xd3\xd1\xa0\x3b\x3f\xca\xc0\xa2\xae\x8b\x53\xda\x01\x4f\xe9\xe5\xa4\x63\x5e\x0b\xf3\x7c\xdf\x4b\x0a\xd0\x23\x80\xf7\x7b\x33\x3c\xb8\x1e\x3e\x1f\xc5\x9f\xe6\x3a\xf9\x1f\xf0\x9f\x7d\xfa\xf3\xec\xfb\xd9\x5f\x01\x00\x00\xff\xff\x49\x8b\x57\x6a\xae\x0f\x00\x00")

func resourceTmplVendorVendorJsonTmplBytes() ([]byte, error) {
	return bindataRead(
		_resourceTmplVendorVendorJsonTmpl,
		"resource/tmpl/vendor/vendor.json.tmpl",
	)
}

func resourceTmplVendorVendorJsonTmpl() (*asset, error) {
	bytes, err := resourceTmplVendorVendorJsonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource/tmpl/vendor/vendor.json.tmpl", size: 4014, mode: os.FileMode(420), modTime: time.Unix(1530271809, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"resource/tmpl/.gometalinter.json.tmpl": resourceTmplGometalinterJsonTmpl,
	"resource/tmpl/CHANGELOG.md.tmpl": resourceTmplChangelogMdTmpl,
	"resource/tmpl/LICENSE.tmpl": resourceTmplLicenseTmpl,
	"resource/tmpl/Makefile.tmpl": resourceTmplMakefileTmpl,
	"resource/tmpl/README.md.tmpl": resourceTmplReadmeMdTmpl,
	"resource/tmpl/configuration.yml.tmpl": resourceTmplConfigurationYmlTmpl,
	"resource/tmpl/definition.yml.tmpl": resourceTmplDefinitionYmlTmpl,
	"resource/tmpl/src/integration_local.go.tmpl": resourceTmplSrcIntegration_localGoTmpl,
	"resource/tmpl/src/integration_remote.go.tmpl": resourceTmplSrcIntegration_remoteGoTmpl,
	"resource/tmpl/src/integration_test_local.go.tmpl": resourceTmplSrcIntegration_test_localGoTmpl,
	"resource/tmpl/src/integration_test_remote.go.tmpl": resourceTmplSrcIntegration_test_remoteGoTmpl,
	"resource/tmpl/vendor/vendor.json.tmpl": resourceTmplVendorVendorJsonTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"resource": &bintree{nil, map[string]*bintree{
		"tmpl": &bintree{nil, map[string]*bintree{
			".gometalinter.json.tmpl": &bintree{resourceTmplGometalinterJsonTmpl, map[string]*bintree{}},
			"CHANGELOG.md.tmpl": &bintree{resourceTmplChangelogMdTmpl, map[string]*bintree{}},
			"LICENSE.tmpl": &bintree{resourceTmplLicenseTmpl, map[string]*bintree{}},
			"Makefile.tmpl": &bintree{resourceTmplMakefileTmpl, map[string]*bintree{}},
			"README.md.tmpl": &bintree{resourceTmplReadmeMdTmpl, map[string]*bintree{}},
			"configuration.yml.tmpl": &bintree{resourceTmplConfigurationYmlTmpl, map[string]*bintree{}},
			"definition.yml.tmpl": &bintree{resourceTmplDefinitionYmlTmpl, map[string]*bintree{}},
			"src": &bintree{nil, map[string]*bintree{
				"integration_local.go.tmpl": &bintree{resourceTmplSrcIntegration_localGoTmpl, map[string]*bintree{}},
				"integration_remote.go.tmpl": &bintree{resourceTmplSrcIntegration_remoteGoTmpl, map[string]*bintree{}},
				"integration_test_local.go.tmpl": &bintree{resourceTmplSrcIntegration_test_localGoTmpl, map[string]*bintree{}},
				"integration_test_remote.go.tmpl": &bintree{resourceTmplSrcIntegration_test_remoteGoTmpl, map[string]*bintree{}},
			}},
			"vendor": &bintree{nil, map[string]*bintree{
				"vendor.json.tmpl": &bintree{resourceTmplVendorVendorJsonTmpl, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

