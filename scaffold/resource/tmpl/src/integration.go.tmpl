package main

import (
	sdkArgs "github.com/newrelic/infra-integrations-sdk/args"
    "github.com/newrelic/infra-integrations-sdk/integration"
    "github.com/newrelic/infra-integrations-sdk/metric"
)

type argumentList struct {
	sdkArgs.DefaultArgumentList
}

const (
	integrationName    = "com.{{.Integration.CompanyName}}.{{.Integration.Name}}"
	integrationVersion = "0.1.0"
)

var args argumentList

func entityWithInventoryAndEvents(i *integration.Integration) {
	// Create Entity
	e,err := i.Entity("foo", "bar")
	panicOnErr(err)

	// Add an Event example
	e.AddEvent(metric.NewEvent("foo","bar"))

	// Add Inventory item Example
	e.AddInventory("foo", "bar", "baz")

}


func entityWithMetrics(i *integration.Integration) {
	// Create Entity
	e,err := i.Entity("baz", "qux")
	panicOnErr(err)

	// Add Metric example
	m, err := e.NewMetricSet("foo")
	m.SetMetric("foo", "bar", metric.ATTRIBUTE)

}

func main() {
		i, err := integration.NewWithArgs(integrationName, integrationVersion, &args)
    	panicOnErr(err)

    	entityWithInventoryAndEvents(i)
    	entityWithMetrics(i)

    	panicOnErr(i.Publish())
}

func panicOnErr(err error) {
	if err != nil {
		panic(err)
	}
}
